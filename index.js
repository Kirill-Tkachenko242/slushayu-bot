require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const mongoose = require('mongoose');

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

mongoose.connect(process.env.MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
}).then(() => console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞')).catch(err => console.error('‚ùå MongoDB:', err));

const Message = mongoose.model('Message', {
  userId: Number,
  text: String,
  date: { type: Date, default: Date.now }
});

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, '–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –º—ã—Å–ª—å ‚Äî —è –µ—ë —Å–æ—Ö—Ä–∞–Ω—é. –ê–Ω–æ–Ω–∏–º–Ω–æ.');
});

bot.on('message', async (msg) => {
  const { chat, text } = msg;
  if (text.startsWith('/start')) return;

  await new Message({ userId: chat.id, text }).save();
  bot.sendMessage(chat.id, '–°–ø–∞—Å–∏–±–æ. –Ø —Å–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ—é –º—ã—Å–ª—å.');

  bot.sendMessage(process.env.OWNER_ID, `üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n${text}`);
});
